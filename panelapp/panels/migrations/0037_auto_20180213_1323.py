# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-02-13 13:23
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.fields.ranges
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import panels.models.entity


class Migration(migrations.Migration):

    dependencies = [
        ('panels', '0036_auto_20180213_1322'),
    ]

    operations = [
        migrations.CreateModel(
            name='STR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=128)),
                ('position', models.CharField(help_text='Chr:Start Position', max_length=32)),
                ('normal_range', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True)),
                ('prepathogenic_range', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True)),
                ('pathogenic_range', django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ('gene', django.contrib.postgres.fields.jsonb.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('moi', models.CharField(choices=[('', 'Provide a mode of inheritance'), ('MONOALLELIC, autosomal or pseudoautosomal, NOT imprinted', 'MONOALLELIC, autosomal or pseudoautosomal, NOT imprinted'), ('MONOALLELIC, autosomal or pseudoautosomal, maternally imprinted (paternal allele expressed)', 'MONOALLELIC, autosomal or pseudoautosomal, maternally imprinted (paternal allele expressed)'), ('MONOALLELIC, autosomal or pseudoautosomal, paternally imprinted (maternal allele expressed)', 'MONOALLELIC, autosomal or pseudoautosomal, paternally imprinted (maternal allele expressed)'), ('MONOALLELIC, autosomal or pseudoautosomal, imprinted status unknown', 'MONOALLELIC, autosomal or pseudoautosomal, imprinted status unknown'), ('BIALLELIC, autosomal or pseudoautosomal', 'BIALLELIC, autosomal or pseudoautosomal'), ('BOTH monoallelic and biallelic, autosomal or pseudoautosomal', 'BOTH monoallelic and biallelic, autosomal or pseudoautosomal'), ('BOTH monoallelic and biallelic (but BIALLELIC mutations cause a more SEVERE disease form), autosomal or pseudoautosomal', 'BOTH monoallelic and biallelic (but BIALLELIC mutations cause a more SEVERE disease form), autosomal or pseudoautosomal'), ('X-LINKED: hemizygous mutation in males, biallelic mutations in females', 'X-LINKED: hemizygous mutation in males, biallelic mutations in females'), ('X-LINKED: hemizygous mutation in males, monoallelic mutations in females may cause disease (may be less severe, later onset than males)', 'X-LINKED: hemizygous mutation in males, monoallelic mutations in females may cause disease (may be less severe, later onset than males)'), ('MITOCHONDRIAL', 'MITOCHONDRIAL'), ('Unknown', 'Unknown'), ('Other - please specifiy in evaluation comments', 'Other - please specifiy in evaluation comments')], max_length=255, verbose_name='Mode of inheritance')),
                ('penetrance', models.CharField(blank=True, choices=[('unknown', 'unknown'), ('Complete', 'Complete'), ('Incomplete', 'Incomplete')], max_length=255, null=True)),
                ('publications', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('phenotypes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('flagged', models.BooleanField(default=False)),
                ('ready', models.BooleanField(default=False)),
                ('mode_of_pathogenicity', models.CharField(blank=True, choices=[('', 'Provide exceptions to loss-of-function'), ('Loss-of-function variants (as defined in pop up message) DO NOT cause this phenotype - please provide details in the comments', 'Loss-of-function variants (as defined in pop up message) DO NOT cause this phenotype - please provide details in the comments'), ('Other - please provide details in the comments', 'Other - please provide details in the comments')], max_length=255, null=True)),
                ('saved_gel_status', models.IntegerField(db_index=True, null=True)),
                ('comments', models.ManyToManyField(to='panels.Comment')),
                ('evaluation', models.ManyToManyField(db_index=True, to='panels.Evaluation')),
                ('evidence', models.ManyToManyField(to='panels.Evidence')),
                ('gene_core', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panels.Gene')),
                ('panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panels.GenePanelSnapshot')),
                ('tags', models.ManyToManyField(to='panels.Tag')),
                ('track', models.ManyToManyField(to='panels.TrackRecord')),
            ],
            options={
                'get_latest_by': 'created',
                'ordering': ['-saved_gel_status'],
            },
            bases=(panels.models.entity.AbstractEntity, models.Model),
        ),
        migrations.AddIndex(
            model_name='str',
            index=models.Index(fields=['panel_id'], name='panels_str_panel_i_68b388_idx'),
        ),
        migrations.AddIndex(
            model_name='str',
            index=models.Index(fields=['gene_core_id'], name='panels_str_gene_co_bad503_idx'),
        ),
    ]
